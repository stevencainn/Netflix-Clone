{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","console","log","data","results","fetchData","className","map","movie","onClick","movieTrailer","id","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ddc6daf.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react'\nimport YouTube from 'react-youtube';\nimport axios from './axios';\nimport \"./Row.css\";\nimport movieTrailer from 'movie-trailer';\n\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row( {title, fetchUrl, isLargeRow}) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(fetchUrl);\n            console.log(request.data.results);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n        \n    }, [fetchUrl])\n\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n    };\n\n    const handleClick = (movie) => {\n        //if trailerurl and the video is already playing click to empty trailer url and hide\n        if (trailerUrl){\n            setTrailerUrl(\"\");\n        } else {\n            //search for url then parse at'v' based on utube url to get the videoID (URlsearchparam allows use of .get)\n            movieTrailer(movie?.id || \"\")\n            .then(url =>{\n                const urlParams = (new URLSearchParams (new URL(url).search));\n                setTrailerUrl(urlParams.get(\"v\"));\n            }).catch(error => console.log(error))\n\n        }\n    }\n\n   \n\n    return (\n        <div className=\"row\">\n            {/* title */}\n            <h2>{ title }</h2>\n\n                <div className='row__posters'>\n                {/*poster */}\n                {movies.map(movie =>(\n                    <img \n                    key={movie.id} \n                    onClick={() => handleClick(movie)}\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                    alt={movie.name}/>\n                ))}\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    )\n}\n\nexport default Row\n","const API_KEY = \"4fb1a977343cea87a02d6bdb288b2d82\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n} \n\nexport default requests;","import React, {useState, useEffect} from 'react';\nimport axios from './axios';\nimport requests from './requests'\nimport './Banner.css'\n\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        //need the async function to fetch data from outside source\n        async function fetchData(){\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[Math.floor (Math.random() * request.data.results.length) -1]);\n            return request;\n        }\n        fetchData()\n    }, [])\n\n    function truncate(str, n){\n        return str?.length > n ? str.substr(0, n -1) + \"...\" : str;\n    }\n\n    console.log(movie);\n\n\n    return (\n        <header \n        className=\"banner\" \n        style={{\n            backgroundSize:\"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center center\",\n        }}>\n            <div className=\"banner__contents\">\n                <h1 className='banner__title'>{movie?.title || movie?.name || movie?.original_name}</h1>\n\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n\n                <h1 className=\"banner__description\"> {truncate(movie?.overview, 150)}</h1>\n            </div>  \n            <div className=\"banner--fadeBottom\"></div>\n        </header>\n    )\n}\n\nexport default Banner\n","import React, {useState, useEffect} from 'react'\nimport './Nav.css'\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100){\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        };\n        \n    }, [])\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n          <img \n          className=\"nav__logo\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\"\n          alt=\"Netflix Logo\"\n          />\n\n         <img \n          className=\"nav__avatar\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n          alt=\"Netflix Logo\"\n          />\n        </div>\n    )\n}\n\nexport default Nav\n","\nimport './App.css';\nimport React from 'react';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner'\nimport Nav from './Nav';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title=\" Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true} />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}